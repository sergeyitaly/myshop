plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.github.johnrengelman.processes' version '0.5.0'
}

// Custom method to get the last Git commit hash
def getGitCommitHash() {
    def process = "git rev-parse --short HEAD".execute()
    return process.text.trim()
}

android {
    namespace 'com.koloryt'
    compileSdk 35

    defaultConfig {
        applicationId "com.koloryt"
        minSdk 21
        targetSdk 35
        versionName "1.0"

        // Dynamically generate versionCode
        versionCode project.hasProperty('dynamicVersionCode') ? project.dynamicVersionCode : 1
    }

    lint {
        baseline = file("lint-baseline.xml")
    }

    signingConfigs {
        release {
            storeFile file("../../koloryt-release-key.keystore")
            storePassword "000000"
            keyAlias "koloryt-key-alias"
            keyPassword "000000"
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release 
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform() // Enable JUnit 5
        }
    }
}

// Custom task to generate versionCode dynamically
task generateVersionCode {
    doLast {
        def gitCommitHash = getGitCommitHash()
        def timestamp = System.currentTimeMillis() // Get the current timestamp

        // Ensure version code is a valid integer (within the range of 0 to 2,147,483,647)
        def versionCode = ((timestamp % 1000000) * 1000 + gitCommitHash.replaceAll("[^0-9]", "").take(4).toInteger()) % Integer.MAX_VALUE

        // Log the version code
        println "Generated versionCode: ${versionCode}"

        project.ext.dynamicVersionCode = versionCode // Set dynamic versionCode as a project property
    }
}

// Ensure generateVersionCode task runs before the build
preBuild.dependsOn generateVersionCode

tasks.withType(JavaCompile) {
    options.compilerArgs += '-Xlint:deprecation'  // Add deprecation warnings
}

dependencies {
    // Core libraries
    implementation libs.coreKtx
    implementation libs.appCompat
    implementation libs.material
    implementation 'io.github.cdimascio:dotenv-java:3.0.2'

    // JUnit 5 for unit testing
    testImplementation libs.junitJupiterApi
    testRuntimeOnly libs.junitJupiterEngine

    // Optional: Mockito for mocking in tests
    testImplementation libs.mockitoCore

    // Optional: Android test dependencies
    androidTestImplementation libs.androidxTestJunit
    androidTestImplementation libs.espressoCore
}
