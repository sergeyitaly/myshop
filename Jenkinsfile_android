pipeline {
    agent {
        docker { image 'cimg/android:2023.09.1' }
    }

    environment {
        DOCKER_ANDROID_IMAGE = 'android-build-image'
        DJANGO_CONTAINER_NAME = 'django-web'
        ANDROID_WORKDIR = '/app/android'
        GOOGLE_PLAY_CREDENTIALS = credentials('play-store-json-key')
        TAG = 'latest'
        DOCKER_HOST = "unix:///var/run/docker.sock"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    deleteDir()
                    echo "Workspace is deleted..."
                    echo "Checking out the repository..."
                    git branch: 'main', credentialsId: 'github-credentials-id', url: 'https://github.com/sergeyitaly/myshop.git'
                    sh "ls -lat"
                }
            }
        }

        stage('Setup') {
          steps {
            dir(DIR) {
              sh 'chmod +x ./gradlew'
            }
          }
        }
        stage('Build') {
          steps {
            dir(DIR) {
                sh './gradlew build'
            }
          }
        }
        stage('Run tests') {
            steps {
                dir(DIR) {
                    sh './gradlew test'
                }
            }
        }        
        
        stage('Deploy to Google Play') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'play-store-json-key', variable: 'GOOGLE_PLAY_CREDENTIALS_JSON')]) {
                        sh '''
                        gcloud auth activate-service-account --key-file=$GOOGLE_PLAY_CREDENTIALS_JSON
                        gcloud firebase appdistribution releases upload ./app-release.apk --app <firebase-app-id> --groups <distribution-group>
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
