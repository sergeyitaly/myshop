pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'sergeyitaly/koloryt'
        TAG = 'serhii_test'
        APK_OUTPUT_DIR = '/app/android/build/outputs/apk/release'
        GOOGLE_PLAY_CREDENTIALS = credentials('play-store-json-key')
    }

    stages {

        stage('Build Android APK') {
            steps {
                script {
                    echo "Building Android APK inside the running container..."
                    sh """
                    /usr/local/bin/docker exec django_web ./gradlew assembleRelease
                    """
                }
            }
        }

        stage('Archive APK') {
            steps {
                script {
                    echo "Archiving the built APK..."
                    sh """
                    docker cp django_web:${APK_OUTPUT_DIR}/app-release.apk ${WORKSPACE}/app-release.apk
                    """
                    archiveArtifacts artifacts: 'app-release.apk', allowEmptyArchive: true
                }
            }
        }

        stage('Deploy to Google Play') {
            steps {
                script {
                    echo "Deploying APK to Google Play Store..."
                    withCredentials([file(credentialsId: 'play-store-json-key', variable: 'GOOGLE_PLAY_JSON')]) {
                        // Run fastlane supply inside the running container
                        sh """
                        docker exec django_web \
                            fastlane supply \
                            --json_key /app/google_play_key.json \
                            --package_name com.example.myapp \
                            --apk ${APK_OUTPUT_DIR}/app-release.apk \
                            --track production
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed. Check logs for details."
        }
    }
}
